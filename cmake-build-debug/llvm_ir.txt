declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)

define dso_local i32 @add (i8 %0 ,i32 %1 ){
%3 = alloca i8
store i8 %0, i8* %3
%4 = alloca i32
store i32 %1, i32* %4
%5 = load i8, i8* %3
%6 = zext i8 %5 to i32
%7 = mul i32 2, %6
%8 = load i32, i32* %4
%9 = mul i32 %8, 10
%10 = add i32 %7, %9
ret i32 %10
}

define dso_local i8 @sub (i32 %0 ,i8 %1 ){
%3 = alloca i32
store i32 %0, i32* %3
%4 = alloca i8
store i8 %1, i8* %4
%5 = load i32, i32* %3
%6 = load i8, i8* %4
%7 = zext i8 %6 to i32
%8 = sub i32 %5, %7
%9 = trunc i32 %8 to i8
ret i8 %9
}
define dso_local i32 @main() {
%1 = alloca i32
store i32 -1, i32* %1
%2 = load i32, i32* %1
%3 = sub i32 0, %2
store i32 %3, i32* %1
%4 = load i32, i32* %1
%5 = sub i32 0, %4
store i32 %5, i32* %1
%6 = load i32, i32* %1
%7 = sub i32 0, %6
store i32 %7, i32* %1
%8 = load i32, i32* %1
%9 = sub i32 100, %8
store i32 %9, i32* %1
%10 = load i32, i32* %1
call void @putint(i32 %10)
ret i32 0
}